{
  "hash": "e6f33e6a53b94af993df27951d0a635f",
  "result": {
    "markdown": "---\ntitle: \"Week 3\"\nauthor: \"Albina Music\"\ndate: \"2023-02-18\"\ncategories: [qmd notes]\n---\n\n\n# make new qmds\n1.  Be able to make a new .qmd document\nYes, I can do this.\n\n - use the top-right green plus icon\n - from the file menu\n - from the file tab choose green plus icon.\n________________________________________________________________________________________\n# render qmds\n\n2.  Be able to render a .qmd document\n\n::: {.cell}\n\n```{.r .cell-code}\n# press the render button\n```\n:::\n\n\nExplain the difference between the source editor view and visual editor view in Rstudio.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Source shows plain text. Visual editor shows rendered markdown text.\n```\n:::\n\n________________________________________________________________________________________\n\n# Simple markdown {.unnumbered .unlisted}\n\n3.  Be able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\n::: {.cell}\n\n```{.r .cell-code}\n# my name is Albina.\n```\n:::\n\n\n________________________________________________________________________________________\n\n# Markdown resources\n\n## a second level\n\n4.  Be aware of resources to help you learn more about markdown options.\n\n*italics* & **bold**\n\nsuperscript^2^ / subscript~2~\n\nTest^10^\n\nTest~2302403~\n\n~~strikethrough~~\n\n~~asdf ads fdsaf das fas fsad fa sdfa ds~~\n\n`verbatim code`\n\nLet's say I'm writing about the `ggplot2` library.\n\n<https://quarto.org>\n\n[Quarto](https://quarto.org)\n\n![This is an elephant](images/elephant.png)\n\n-   unordered list\n    -   sub-item 1\n    -   sub-item 2\n        -   sub-sub-item 1\n\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|    12 | 12   | 12      |   12   |\n|   123 | 123  | 123     |  123   |\n|     1 | 1    | 1       |   1    |\n\n``` bash\nPut our code in here\n```\n\n``` python\n1 + 1\n```\n\n``` default\na <- 1\nb <- 3\n# some comments\n```\n\n$x=1$\n\n$E = mc^{2}$\n________________________________________________________________________________________\n\n5.  Be able to insert an R code chunk, and show the output in the rendered document.\n\n-   macro for quick insert\n\n::: {.cell}\n\n```{.r .cell-code}\n2+2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\nmac - \"option-command-i\" windows - Ctrl-Alt-I\n\n6.  Running R code chunks in a qmd\n\n-   pressing play\n-   copy/paste into console\n-   highlight then command-enter (mac)\n-   precedence issues (first to last)\n\n7.  Be aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(mtcars$mpg)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\"b\" + 5 \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in \"b\" + 5: non-numeric argument to binary operator\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(mtcars$mpg)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=25%}\n:::\n:::\n\n\n8.  Be able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Yes. Use execute in top-level yml, chunk options have precedence over global options.\n```\n:::\n\n\n9.  Write inline r code.\n\n2\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 54\nb <- 100\n\nc <- a+b\n```\n:::\n\n\n10. Explain how the rendering environment is different from the Rstudio environment.\n\n::: {.cell}\n\n```{.r .cell-code}\nc <- a+b\nc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 154\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}