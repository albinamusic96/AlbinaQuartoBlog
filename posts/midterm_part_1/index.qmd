---
title: "Midterm Part 1"
author: "Albina Music"
date: "2023-02-18"
categories: [qmd notes]
---

### M1: Explaining Basic programming skills
## Write a blog post where you demonstrate your ability to use these basic programming concepts in R.

1. R objects: show that you understand and can create/use objects of various types, including at least: character/string, numeric, integer, logical, data.frame, and list. Show that you can index objects appropriately (e.g., locate elements of an object, change elements of an object etc.)
```{r}
## Character/String
string1 <- "Hello"
string2 <- "world"
result1 <- paste(string1, string2)
print(result1) 

string3 <- "Goodbye"
string4 <- "world"
result2 <- paste0(string3, string4)
print(result2) 

## Numeric
my_num <- 5.2

my_num + 3 

my_nums <- c(1, 2, 3, 4, 5)

my_nums[3]

## Integer
my_int <- 5L

my_int + 3L 

my_ints <- c(1L, 2L, 3L, 4L, 5L)

my_ints[3]

## Logical
my_bool <- TRUE

my_bool & FALSE 

my_logicals <- c(TRUE, FALSE, TRUE, TRUE, FALSE)

my_logicals[3]

## Data Frame
my_df <- data.frame(name = c("John", "Mary", "Bob"), age = c(25, 30, 35), married = c(TRUE, TRUE, FALSE))

my_df$name

my_df[2, 3] 

## List
my_list <- list(name = "Albina", age = 28, married = TRUE, hobbies = c("reading", "traveling", "cooking"))

my_list[[1]] 

my_list[[4]][2] 

```

2. Logical operations: show that you understand and can use logical operators in R (e.g., == | > < >= <=)
```{r}
## == (equal to)
x <- 5
y <- 7

x == y 

## >< (greater than)
x <- 5
y <- 7

x > y

## >< (less than)
x <- 5
y <- 7

x < y 

## ><|= (greater than or equal to)
x <- 5
y <- 7

x >= y 

## ><|= (less than or equal to)
x <- 5
y <- 7

x <= y 

## &(and)
x <- TRUE
y <- FALSE

x & y 

## | (or)
x <- TRUE
y <- FALSE

x | y 

```

3. Loops: Show that you understand the components of a for loop, and that you can use a for loop.
```{r}
## Basic Loops
my_nums <- c(1, 2, 3, 4, 5)

for (num in my_nums) {
  print(num)
}

## Nested Loops
my_nums1 <- c(1, 2, 3)
my_nums2 <- c(4, 5, 6)

for (num1 in my_nums1) {
  for (num2 in my_nums2) {
    print(num1 + num2)
  }
}

## "if" loop
my_nums <- c(1, 2, 3, 4, 5)

for (num in my_nums) {
  if (num %% 2 == 0) {
    print(num)
  }
}

## "break" loop
my_nums <- c(1, 2, 3, 4, 5)

for (num in my_nums) {
  if (num == 3) {
    break
  }
  print(num)
}

## "continue" loop
my_nums <- c(1, 2, 3, 4, 5)

for (num in my_nums) {
  if (num %% 2 == 1) {
    next
  }
  print(num)
}

```

4. Functions: Show that you understand the syntax for declaring your own function, and that you can declare and run your own custom function to accomplish some task (you choose what the function does).
```{r}
## example 1
my_function <- function(x, y) {
  z <- x + y
  return(z)
}

result <- my_function(3, 5)
print(result) 

## example 2
sum_of_squares <- function(v) {
  sum <- 0

  for (i in v) {
    if (i %% 2 == 0) {
      sum <- sum + i^2
    }
  }
  
  return(sum)
}

```
